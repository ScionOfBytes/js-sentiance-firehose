const SentianceFirehose=function(){let e,n,t=1e3,i=!1;const o=function(n,t,i,o){if(!n)throw new Error("No app id configured");if(!t)throw new Error("No stream definition id configured");if(!i)throw new Error("No bearer token configured");if(!e)throw new Error("No data handler configured");s(n,t,i,o)},r=function(e,n,i,r){t*=2,setTimeout(function(){o(e,n,i,r)},t)},s=function(e,n,t,o){const s=new XMLHttpRequest,c={query:"        mutation($app_id: String!, $stream_definition_id: String!, $user_ids: [String]) {          createSubscription(app_id:$app_id, stream_definition_id: $stream_definition_id, user_ids: $user_ids) {            id            token          }        }      ",variables:{app_id:e,stream_definition_id:n,user_ids:o||null}};s.open("POST",`https://${i?"preprod-":""}api.sentiance.com/v2/gql`,!0),s.setRequestHeader("Content-Type","application/json"),s.setRequestHeader("Authorization","Bearer "+t),s.onreadystatechange=function(){if(4===s.readyState)if(200===s.status){const i=JSON.parse(s.responseText);if(i.data&&i.data.createSubscription){const e=i.data.createSubscription.id,n=i.data.createSubscription.token;a(e,n)}else r(e,n,t,o)}else r(e,n,t,o)},s.send(JSON.stringify(c))},a=function(t,o){(n=io(`https://${i?"preprod-":""}firehose.sentiance.com/`)).on("connect",function(){c(n,t,o)}),n.on("data",function(n){const t=JSON.parse(n);e(t.data,t.errors,t.metadata)}),n.on("disconnect",function(){}),n.on("error",function(e){})},c=function(e,n,t){const i={id:n,token:t};e.emit("subscribe-v1",i)};return{connect:function(e,n,t,r,s){i=s,setTimeout(o(e,n,t,r))},disconnect:function(){n&&n.connected&&n.disconnect()},onData:function(n){e=n}}}();module.exports=SentianceFirehose;